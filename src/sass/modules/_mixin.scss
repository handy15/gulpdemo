//sass中可用mixin定义一些代码片段，且可传参数，方便日后根据需求调用。从此处理css3的前缀兼容轻松便捷。
//body的字体大小设置：$select -> 样式选择器
@mixin body-size($select:body){
  #{$select}{
    font-size:$baseFontSize;
  }
  @media screen and (min-width: 1366px){
    #{$select}{
      font-size:$f14;
    }
  }
  @media screen and (min-width: 1680px){
    #{$select}{
      font-size:$f15;
    }
  }
  @media screen and (min-width: 1920px){
    #{$select}{
      font-size:$f16;
    }
  }
}
//整体框架屏幕自适应：$select -> 样式选择器
@mixin container-width($select:body){
  #{$select}{
    width:1000px;
    margin-left:auto;
    margin-right:auto;
  }
  @media screen and (min-width: 1366px){
    #{$select}{
      width:1200px;
      margin-left:auto;
      margin-right:auto;
    }
  }
  @media screen and (min-width: 1680px){
    #{$select}{
      width:1500px;
      margin-left:auto;
      margin-right:auto;
    }
  }
  @media screen and (min-width: 1920px){
    #{$select}{
      width:1800px;
      margin-left:auto;
      margin-right:auto;
    }
  }
}

//盒模型
//margin(margin的方向，margin的大小)
@mixin box-margin-padding($boxType:'margin',$size:5px){
  @if $boxType == margin {
    .m#{$size}{
      margin:$size;
    }
    .mt#{$size}{
      margin-top:$size;
    }
    .mr#{$size}{
      margin-right:$size;
    }
    .mb#{$size}{
      margin-bottom:$size;
    }
    .ml#{$size}{
      margin-left:$size;
    }
  }@else if $boxType == padding {
    .p#{$size}{
      padding:$size;
    }
    .pt#{$size}{
      padding-top:$size;
    }
    .pr#{$size}{
      padding-right:$size;
    }
    .pb#{$size}{
      padding-bottom:$size;
    }
    .pl#{$size}{
      padding-left:$size;
    }
  }
}
//一行显示，超出范围显示省略号
@mixin ellipsis {
  width: 100%;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
//变换-倾斜
@mixin skew($deg:30deg){
  transform:skew($deg);
  -ms-transform:skew($deg); 	/* IE 9 */
  -moz-transform:skew($deg); 	/* Firefox */
  -webkit-transform:skew($deg); /* Safari 和 Chrome */
  -o-transform:skew($deg); 	/* Opera */
}
//px转换为rem
@mixin px2rem($property,$px-values,$baseline-px:75px,$support-for-ie:false){
  //Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;
  //Print the first line in pixel values
  @if $support-for-ie {
    #{$property}: $px-values;
  }
  //if there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number"{
    #{$property}: $px-values / $baseline-rem;
  }
  @else {
    //@warn 'in';
    //Create an empty list that we can dump values into
    $rem-values:();
    @each $value in $px-values{
      // If the value is zero or not a number, return it
      @if $value == 0 or type-of($value) != "number"{
        //@warn $value + '5';
        $rem-values: append($rem-values, $value);
      }@else if(type-of($value) == "number"){
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }
    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}
//移动端字体大小适配
@mixin font-dpr($font-size){
  font-size: $font-size;

  [data-dpr="2"] & {
    font-size: $font-size * 2;
  }

  [data-dpr="3"] & {
    font-size: $font-size * 3;
  }
}